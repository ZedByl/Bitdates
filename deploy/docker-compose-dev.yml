services:
  mongo:
    image: mongo:latest
    restart: always
    env_file:
      - ../backend/.env
    networks:
      - web
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db

  backend:
    image: node:22.4.0
    restart: always
    ports:
      - "3000:3000"
    env_file:
      - ../backend/.env
    depends_on:
      - mongo
    networks:
      - web
    working_dir: /usr/src/app
    volumes:
      - ../backend:/usr/src/app
    command: bash -c "
      npm install
      && npm run dev"

  frontend:
    image: node:22.4.0
    restart: always
    depends_on:
      - backend
    networks:
      - web
    working_dir: /usr/src/app
    volumes:
      - ../frontend:/usr/src/app
      - frontend-build:/usr/src/app/dist
    command: bash -c "
      npm install
      && npm run build"

  nginx:
    build: nginx
    depends_on:
      - frontend
      - backend
      - mongo
    restart: always
    ports:
      - "8000:80"
    networks:
      - web
    volumes:
      - ./nginx-dev/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx-dev/nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend-build:/usr/share/nginx/html
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

networks:
  web:
    driver: bridge

volumes:
  mongo-data:
  frontend-build:
